# 1. Install Telescope via Composer
composer require laravel/telescope

# 2. Run Telescope installation command
php artisan telescope:install

# 3. Update model files for Telescope to use a different database connection
# app/models/Telescope_entries_tags.php
protected $connection = 'pgsql_second';

# app/models/Telescope_entries.php
protected $connection = 'pgsql_second';

# app/models/Telescope_monitoring.php
protected $connection = 'pgsql_second';

# 4. Add the second database connection information to your .env file
DB_CONNECTION_SECOND=pgsql_second
DB_HOST_SECOND=127.0.0.1
DB_PORT_SECOND=5432
DB_DATABASE_SECOND=telescope
DB_USERNAME_SECOND=forge
DB_PASSWORD_SECOND=

# 5. Create a new configuration for the second database in the database config file
'pgsql_second' => [
    'driver' => 'pgsql',
    'host' => env('DB_HOST_SECOND', '127.0.0.1'),
    'port' => env('DB_PORT_SECOND', '5432'),
    'database' => env('DB_DATABASE_SECOND', 'forge'),
    'username' => env('DB_USERNAME_SECOND', ''),
    'password' => env('DB_PASSWORD_SECOND', ''),
    'charset' => 'utf8',
    'prefix' => '',
    'prefix_indexes' => true,
    'search_path' => 'public',
    'sslmode' => 'prefer',
],

# 6. Update Telescope config file to use the second database connection for storage
'storage' => [
    'database' => [
        'connection' => env('DB_CONNECTION_SECOND', 'pgsql_second'),
        'chunk' => 1000,
    ],
],

# 7. Run Telescope migrations
php artisan migrate


# For local development, update your Telescope configuration
# in the TelescopeServiceProvider.php file, add the following to the register method
if ($this->app->environment('local')) {
    $this->app->register(\Laravel\Telescope\TelescopeServiceProvider::class);
    $this->app->register(TelescopeServiceProvider::class);
}

# Add configuration to composer.json to prevent auto-discovery in production
"extra": {
    "laravel": {
        "dont-discover": [
            "laravel/telescope"
        ]
    }
},

# Modify the Telescope configuration file
'enabled' => env('TELESCOPE_ENABLED', true),
